service: sample-lambda-Authorizer

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  environment:
    AUTH0_DOMAIN: 'your-auth0-domain'
    AUTH0_AUDIENCE: 'your-auth0-audience'

# functions:
#   auth0Authorizer:
#     handler: src/SampleAuthorizer.handler
#     events:
#       - httpApi:
#           path: /my-api
#           method: GET
#           authorizer:
#             name: SampleAuthorizer
#             identitySource: $request.header.Authorization
#             type: token

resources:
  Resources:
    SampleAuthorizer:
      Type: AWS::Lambda::Function
      Properties:
        Code:
          ZipFile: ${file(src/SampleAuthorizer.js)}
        FunctionName: ${self:service}-SampleAuthorizer
        Handler: src/SampleAuthorizer.handler
        Runtime: nodejs14.x
        Timeout: 10
        Role: arn:aws:iam::${account}:role/sample-lambda-Authorizer
      Metadata:
        'AWS::Lambda::Function':
          DependsOn:
            - SampleAutorizerRole
    SampleAutorizerRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: ${self:service}-sample-Autorizer-policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: arn:aws:logs:*:*:*
        RoleName: sample-lambda-Authorizer
